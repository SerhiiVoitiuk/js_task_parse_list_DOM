{"mappings":"ACEA,IAGQ,EAHF,EAAQ,SAAS,aAAa,CAAC,MAAM,QAAQ,CAKjD,CAFM,EAAO,MAAM,IAAI,CAsBhB,IApBF,OAAO,CAAC,SAAC,CAAd,EACE,EAAE,OAAO,CAAC,MAAM,CAAG,CAAC,EAAE,OAAO,CAAC,MAAM,CAAC,KAAK,CAAC,GAAG,OAAO,CAAC,IAAK,KAC3D,EAAE,OAAO,CAAC,IAAI,CAAG,EAAE,WAAW,CAAC,IAAI,EACrC,GAEA,EAAK,IAAI,CAAC,SAAC,CAAA,CAAG,CAAd,EAAoB,OAAA,EAAE,OAAO,CAAC,MAAM,CAAG,EAAE,OAAO,CAAC,MAAM,A,GACvD,EAAK,OAAO,CAAC,SAAC,CAAd,EAAoB,OAAA,AAcb,CAdiB,CAAC,EAAE,CAAC,aAAa,CAAC,WAAW,CAAC,E,GAM/C,AAFM,MAAM,IAAI,CAWZ,GATC,GAAG,CAAC,SAAC,CAAjB,EAAwB,MAAA,CACtB,KAAM,EAAE,OAAO,CAAC,IAAI,CACpB,SAAU,EAAE,OAAO,CAAC,QAAQ,CAC5B,IAAK,EAAE,OAAO,CAAC,GAAG,CAClB,OAAQ,EAAE,OAAO,CAAC,MAAM,AAC1B,C","sources":["<anon>","src/scripts/main.js"],"sourcesContent":["\"use strict\";\nvar allLi = document.querySelector(\"ul\").children;\nvar sortList = function(list) {\n    var data = Array.from(list);\n    data.forEach(function(d) {\n        d.dataset.salary = +d.dataset.salary.slice(1).replace(\",\", \".\");\n        d.dataset.name = d.textContent.trim();\n    });\n    data.sort(function(a, b) {\n        return b.dataset.salary - a.dataset.salary;\n    });\n    data.forEach(function(d) {\n        return list[0].parentElement.appendChild(d);\n    });\n};\nvar getEmployees = function(list) {\n    var data = Array.from(list);\n    return data.map(function(d) {\n        return {\n            name: d.dataset.name,\n            position: d.dataset.position,\n            age: d.dataset.age,\n            salary: d.dataset.salary\n        };\n    });\n};\nsortList(allLi);\ngetEmployees(allLi);\n\n//# sourceMappingURL=index.1bc8c584.js.map\n","'use strict';\n\nconst allLi = document.querySelector('ul').children;\n\nconst sortList = (list) => {\n  const data = Array.from(list);\n\n  data.forEach((d) => {\n    d.dataset.salary = +d.dataset.salary.slice(1).replace(',', '.');\n    d.dataset.name = d.textContent.trim();\n  });\n\n  data.sort((a, b) => b.dataset.salary - a.dataset.salary);\n  data.forEach((d) => list[0].parentElement.appendChild(d));\n};\n\nconst getEmployees = (list) => {\n  const data = Array.from(list);\n\n  return data.map((d) => ({\n    name: d.dataset.name,\n    position: d.dataset.position,\n    age: d.dataset.age,\n    salary: d.dataset.salary,\n  }));\n};\n\nsortList(allLi);\ngetEmployees(allLi);\n"],"names":["data","allLi","document","querySelector","children","Array","from","forEach","d","dataset","salary","slice","replace","name","textContent","trim","sort","a","b","list","parentElement","appendChild","map","position","age"],"version":3,"file":"index.1bc8c584.js.map"}